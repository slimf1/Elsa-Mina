name: deploy

on:
  push:
    branches: ["master"]

jobs:
  test:
    uses: ./.github/workflows/test.yml
    with:
      dotnet-version: "8.0.x"
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
      - name: restore
        run: ./scripts/restore.sh
      - name: build
        run: ./scripts/build.sh
      - name: publish
        run: ./scripts/publish.sh
      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-package
          path: ./output

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-package
          path: ./output
      - name: upload package
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          passphrase: ${{ secrets.SERVER_KEY_PASSPHRASE }}
          source: ./output
          target: ./ElsaV2
      - name: restart app
        uses: appleboy/ssh-action@v1.0.3
        env:
          CONFIG_FILE: ${{ secrets.CONFIG_FILE }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          passphrase: ${{ secrets.SERVER_KEY_PASSPHRASE }}
          envs: CONFIG_FILE
          script: |
            cd ./ElsaV2/output
            echo $CONFIG_FILE > config.json
            pkill -0 "ElsaMina.Console" && pkill -fi "ElsaMina.Console"
            chmod u+x ElsaMina.Console
            nohup ./ElsaMina.Console &> /dev/null &
